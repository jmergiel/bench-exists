Benchmark with 10000000 elements (data size per test = 76.294MB) and 1000000 loops

Searching for non-existent element in set:
[                      set, using count()] 148971900(ns) 148.971909(ns/loop)
[                       set, using find()] 153873100(ns) 153.873108(ns/loop)

Searching for non-existent element in unordered_set:
[            unordered_set, using count()] 751000(ns) 0.751000(ns/loop)
[             unordered_set, using find()] 1183000(ns) 1.183000(ns/loop)

Relative comparison (= slower than the fastest by this ratio):
[            unordered_set, using count()] 1.000x
[             unordered_set, using find()] 1.575x
[                      set, using count()] 198.365x
[                       set, using find()] 204.891x

Searching for middle element in set:
[                      set, using count()] 216263100(ns) 216.263107(ns/loop)
[                       set, using find()] 212853200(ns) 212.853195(ns/loop)

Searching for middle element in unordered_set:
[            unordered_set, using count()] 10853300(ns) 10.853300(ns/loop)
[             unordered_set, using find()] 1127600(ns) 1.127600(ns/loop)

Relative comparison (= slower than the fastest by this ratio):
[             unordered_set, using find()] 1.000x
[            unordered_set, using count()] 9.625x
[                       set, using find()] 188.767x
[                      set, using count()] 191.791x
